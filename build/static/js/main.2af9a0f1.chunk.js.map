{"version":3,"sources":["Calculator/numbers.js","Calculator/App.js","index.js"],"names":["Numbers","useState","number","setnumber","display","f","neww","target","value","p","classs","setclasss","change","className","style","onClick","src","alt","id","backgroundColor","color","map","e","key","substr","length","String","evaluate","includes","toFixed","console","log","App","ReactDOM","render","document","getElementById"],"mappings":"mOA6EeA,MAzEf,WAGI,IAHe,EAOaC,mBAAS,IAPtB,mBAORC,EAPQ,KAOAC,EAPA,KAQTC,EAAU,SAACC,GACb,IAAMC,EAAQD,EAAEE,OAAOC,MAEvBL,GAAU,SAACM,GACP,OAAQA,EAAGH,MAZJ,EA4BaL,oBAAS,GA5BtB,mBA4BRS,EA5BQ,KA4BAC,EA5BA,KA6BTC,EAAO,WACTD,GAAWD,IAOf,OACI,oCACI,yBAAKG,WAAsB,IAATH,EAAc,oBAAoB,gBAGhD,yBAAKG,UAAU,SAAQ,0CAAvB,IAA2C,yBAAKA,UAAU,QAAQC,MAAO,CAACV,SAAkB,IAATM,EAAc,OAAO,gBAAkBK,QAASH,EAAQI,IAAI,iEAAiEC,IAAI,KAApN,IAAyN,yBAAKD,IAAI,kBAAkBF,MAAO,CAACV,SAAkB,IAATM,EAAe,OAAO,gBAAkBK,QAASH,EAAQK,IAAI,GAAGJ,UAAU,SAI/U,yBAAKK,GAAG,OAAOJ,MAAO,CAACK,iBAA0B,IAATT,EAAe,UAAU,UAAWU,OAAgB,IAATV,EAAc,QAAQ,qBAAwBR,GAKjI,yBAAKW,UAAU,YACf,yBAAKA,UAAU,OAjDb,CAAE,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAE,EAAG,IAAK,KAkD/BQ,KAAI,SAACC,GAAD,OAAO,4BAAQC,IAAKD,EAAGT,UAAU,UAAUL,MAAOc,EAAGP,QAASX,GAAU,IAAKkB,OAMxF,yBAAKT,UAAU,cAvDV,CAAC,IAAK,IAAK,IAAK,KAwDXQ,KAAI,SAACC,GAAD,OAAO,4BAAQC,IAAKD,EAAGd,MAAOc,EAAGP,QAASX,GAAWkB,MACnE,4BAAQP,QAAS,kBAAMZ,EAAUD,EAAOsB,OAAO,EAAGtB,EAAOuB,OAAS,MAAlE,YACA,4BAAQV,QAAS,kBAAMZ,EAAU,KAAKK,MAAM,IAA5C,MACA,4BAAQO,QA/CF,SAACO,GACf,IACInB,EACIuB,OAAOC,YAASzB,IAASuB,OAAS,GAC9BC,OAAOC,YAASzB,IAAS0B,SAAS,KAChCF,OAAOC,YAASzB,GAAQ2B,QAAQ,IAChCH,OAAOC,YAASzB,KAE5B,SACE4B,QAAQC,IAAIT,KAsCmBd,MAAM,KAAjC,UClDDwB,EAdH,WAER,OACI,oCACI,yBAAKnB,UAAU,WACX,yBAAKG,IAAI,yBAAyBC,IAAI,SACtC,2CAEJ,kBAAC,EAAD,QCLZgB,IAASC,OAEL,kBAAC,EAAD,MACFC,SAASC,eAAe,W","file":"static/js/main.2af9a0f1.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport {evaluate} from 'mathjs';\r\nimport './cal.css';\r\n\r\nfunction Numbers() {\r\n\r\n    //setting numbers and operators to iterate through\r\n    const array = [ 1, 2, 3, 4, 5, 6, 7, 8, 9,0, \".\", \"%\"]\r\n    const opeArray = [\"+\", \"-\", \"*\", \"/\"];\r\n\r\n    //state for input and display-input\r\n    const [number, setnumber] = useState(\"\");\r\n    const display = (f) => {\r\n        const neww = (f.target.value);\r\n        // setnumber(number + neww);\r\n        setnumber((p)=>{\r\n            return (p)+neww\r\n        })\r\n    };\r\n    //evaluate function\r\n    const Evaluate =  (e) => {\r\n        try {\r\n            setnumber(\r\n                String(evaluate(number)).length > 3 &&\r\n                    String(evaluate(number)).includes(\".\")\r\n                    ? String(evaluate(number).toFixed(4))\r\n                    : String(evaluate(number))\r\n            );\r\n        } catch  {\r\n            console.log(e);\r\n        }\r\n    };\r\n    const [classs, setclasss] = useState(true)\r\n    const change=()=>{\r\n        setclasss(!classs);\r\n    }\r\n\r\n       \r\n    \r\n\r\n\r\n    return (\r\n        <>\r\n            <div className={( classs===true?\"calculator-layout\":\"night-layout\" )}>\r\n                \r\n                {/*heading of the app*/}\r\n                <div className=\"title\"><h2>Calculator</h2> <img className=\"night\" style={{display:(classs===true?\"none\":\"inline-block\")}} onClick={change} src=\"https://www.flaticon.com/svg/static/icons/svg/1497/1497625.svg\" alt=\"\"/> <img src=\"/images/day.svg\" style={{display:(classs===false?\"none\":\"inline-block\")}} onClick={change} alt=\"\" className=\"day\"/></div>\r\n\r\n\r\n                {/*display of input*/}\r\n                <div id=\"show\" style={{backgroundColor:(classs===false?\"#464141\":\"#A2BFBD\"),color:(classs===true?\"white\":\"rgb(245, 132, 2)\")}} >{number}</div>\r\n\r\n\r\n\r\n                {/*number template*/}\r\n                <div className=\"template\">\r\n                <div className=\"num\">\r\n                {array.map((e) => <button key={e} className=\"numbers\" value={e} onClick={display}>{\" \"}{e}</button>)}\r\n                </div>\r\n\r\n\r\n\r\n                {/*operators*/}\r\n                <div className=\"side-opera\">\r\n                {opeArray.map((e) => <button key={e} value={e} onClick={display} >{e}</button>)}\r\n                <button onClick={() => setnumber(number.substr(0, number.length - 1))}>  Clear </button>\r\n                <button onClick={() => setnumber(\"\")} value=\"\">AC</button>\r\n                <button onClick={Evaluate} value=\"=\">=</button>\r\n                </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    );\r\n\r\n};\r\n\r\n\r\nexport default Numbers;\r\n\r\n","import React from 'react';\r\nimport Numbers from './numbers';\r\n\r\nconst App = () => {\r\n\r\n    return (\r\n        <>\r\n            <div className=\"landing\">\r\n                <img src=\"/images/calculator.png\" alt=\"CALC\"/>\r\n                <h1>CALCULATOR</h1>\r\n            </div>\r\n            <Numbers />\r\n\r\n        </>\r\n    )\r\n};\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './Calculator/App'\n\n\n\nReactDOM.render(\n\n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}